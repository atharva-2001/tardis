language: python

python:
    - 2.7

virtualenv:
  system_site_packages: true

env:
    global:
        - COMPILER = gcc
        - CYTHON_VERSION=0.21
        - NUMPY_VERSION=1.8
        - SCIPY_VERSION=0.10
        - PANDAS_VERSION=0.12
        - ASTROPY_VERSION=0.4
        - ASTROPY_USE_SYSTEM_PYTEST=1
        - SETUP_CMD='test'
        - TEST_MODE='normal'
#    - COMPILER=gcc CYTHON_VERSION=0.20.1 NUMPY_VERSION=1.8.0 PANDAS_VERSION=0.12 ASTROPY_VERSION=0.3.2 ASTROPY_USE_SYSTEM_PYTEST=1 SETUP_CMD='test' TEST_MODE='normal'
#    - COMPILER=gcc CYTHON_VERSION=0.20.1 NUMPY_VERSION=1.8.0 PANDAS_VERSION=latest ASTROPY_VERSION=0.3.2 ASTROPY_USE_SYSTEM_PYTEST=1 SETUP_CMD='test' TEST_MODE='normal'
#    - COMPILER=gcc CYTHON_VERSION=0.20.1 NUMPY_VERSION=1.8.0 PANDAS_VERSION=latest ASTROPY_VERSION=0.3.2 ASTROPY_USE_SYSTEM_PYTEST=1 SETUP_CMD='test --args="--atomic-dataset=$HOME/kurucz_cd23_chianti_H_He.h5"' TEST_MODE='spectrum'
#    - COMPILER=clang CYTHON_VERSION=0.20.1 NUMPY_VERSION=1.8.0 PANDAS_VERSION=latest ASTROPY_VERSION=0.3.2 ASTROPY_USE_SYSTEM_PYTEST=1 SETUP_CMD='test --args="--atomic-dataset=$HOME/kurucz_cd23_chianti_H_He.h5"' TEST_MODE='spectrum'
matrix:
    include:
        - python: "2.7"

        - python: "2.7"
          env: PANDAS_VERSION=0.12

        - python: "2.7"
          env: PANDAS_VERSION=latest

        - python: "2.7"
          env: ASTROPY_VERSION=development

        - python: "2.7"
          env: COMPILER=gcc SETUP_CMD='test --args="--atomic-dataset=$HOME/kurucz_cd23_chianti_H_He.h5"' TEST_MODE='spectrum'

        - python: "2.7"
          env: COMPILER=clang SETUP_CMD='test --args="--atomic-dataset=$HOME/kurucz_cd23_chianti_H_He.h5"' TEST_MODE='spectrum'






before_install:
   # We do this to make sure we get the dependencies so pip works below
   - sudo apt-get update -qq
   - sudo apt-get install -qq python-virtualenv python-numpy python-pandas python-scipy python-h5py python-yaml python-astropy cython
   - pip install pip --upgrade
   - if [[ $COMPILER == 'clang' ]]; then sudo apt-get install -qq clang; fi
   - if [[ $TEST_MODE == 'spectrum' ]]; then wget http://moria.astro.utoronto.ca/\~wkerzend/tardis_atomic_databases/kurucz_cd23_chianti_H_He.zip; fi
   - if [[ $TEST_MODE == 'spectrum' ]]; then unzip kurucz_cd23_chianti_H_He.zip; fi
   - if [[ $TEST_MODE == 'spectrum' ]]; then mv kurucz_cd23_chianti_H_He.h5 $HOME/; fi

install:
   - export PYTHONIOENCODING=UTF8 # just in case
   - pip install -r pip-requirements
   - pip install --upgrade "Cython==$CYTHON_VERSION"
   - if [[ $PANDAS_VERSION == 'latest' ]]; then pip install -q --upgrade pandas; else pip install -q --upgrade "pandas==$PANDAS_VERSION"; fi
   - if [[ $NUMPY_VERSION == 'latest' ]]; then pip install -q --upgrade numpy; else pip install -q --upgrade "numpy==$NUMPY_VERSION"; fi
   - if [[ $ASTROPY_VERSION == 'development' ]]; then pip -q install git+http://github.com/astropy/astropy.git#egg=astropy; else pip install -q --upgrade "astropy==$ASTROPY_VERSION"; fi
   - pip install -q --upgrade pytest==2.5.1
   - pip install -q --upgrade pytest-cov

   - if [[ $SETUP_CMD == 'test --coverage' ]]; then pip install -q coveralls; fi
   - if [[ $SETUP_CMD == 'test --coverage' ]]; then pip install -q pytest-cov; fi

script:
    - echo $SETUP_CMD
    - CC=$COMPILER python setup.py $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls; fi