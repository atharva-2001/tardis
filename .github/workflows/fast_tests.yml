#  For more information about TARDIS pipelines, please refer to:
#
#    https://tardis-sn.github.io/tardis/development/continuous_integration.html

name: tests

on:
  workflow_dispatch:


env:
  CACHE_NUMBER: 0  # increase to reset cache manually
  PYTEST_FLAGS: --tardis-refdata=${{ github.workspace }}/tardis-refdata --tardis-regression-data=${{ github.workspace }}/tardis-regression-data
                --cov=tardis --cov-report=xml --cov-report=html
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

defaults:
  run:
    shell: bash -l {0}
 
jobs:
  test-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup_env
        with: 
          os-label: linux-64

      - name: Discover continuum tests
        id: discover-ct
        run: |
         output=$(pytest tardis -m "continuum" --collect-only -qq -p no:warnings)
         folder_matrix=$(echo "$output" | cut -d':' -f1 | cut -d'/' -f1-2 | sort -u | jq -R . | jq -cs .)
         echo "cont-folder-matrix=$folder_matrix" >> "$GITHUB_OUTPUT"
      - name: Discover non 
        id: discover-nct
        run: |
         output=$(pytest tardis -m "not continuum" --collect-only -qq -p no:warnings)
         folder_matrix=$(echo "$output" | cut -d':' -f1 | cut -d'/' -f1-2 | sort -u | jq -R . | jq -cs .)
         echo "not-cont-folder-matrix=$folder_matrix" >> "$GITHUB_OUTPUT"
    outputs:
      discover-nct: ${{ steps.discover-nct.outputs.not-cont-folder-matrix }}
      discover-ct: ${{ steps.discover-ct.outputs.cont-folder-matrix }}

  non-continuum:
    if: always()
    needs: test-matrix
    strategy:
      matrix:
        test-path: ${{fromJson(needs.test-matrix.outputs.discover-nct)}}
        os: ["macos-latest", "ubuntu-latest"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: nct-${{ matrix.os }}-${{ matrix.test-path }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup tardis
        uses: ./.github/actions/setup_tardis
        with: 
          os-label: ${{ matrix.os=='macos-latest' && 'osx-arm64' || 'linux-64' }}
      
      - name: Install package editable
        run: |
          pip install -e .

      - name: Run tests
        run: pytest ${{ matrix.test-path }} ${{ env.PYTEST_FLAGS }} -m "not continuum"
      
      - name: Refdata Generation tests
        run: pytest ${{ matrix.test-path }} ${{ env.PYTEST_FLAGS }} --generate-reference
        if: contains(github.event.pull_request.labels.*.name, 'run-generation-tests') || github.ref == 'refs/heads/master'
    
  continuum_tests:
    if: always()
    needs: test-matrix
    strategy:
      matrix:
        test-path: ${{fromJson(needs.test-matrix.outputs.discover-ct)}}
        os: ["macos-latest", "ubuntu-latest"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ct-${{ matrix.os }}-${{ matrix.test-path }}
    steps:
        - uses: actions/checkout@v4

        - name: Setup tardis
          uses: ./.github/actions/setup_tardis
          with: 
            os-label: ${{ matrix.os=='macos-latest' && 'osx-arm64' || 'linux-64' }}

        - name: Install package editable
          run: |
            pip install -e .

        - name: Run tests
          run: pytest ${{ matrix.test-path }} ${{ env.PYTEST_FLAGS }} -m continuum

        - name: Refdata Generation tests
          run: pytest ${{ matrix.test-path }} ${{ env.PYTEST_FLAGS }} --generate-reference
          if: contains(github.event.pull_request.labels.*.name, 'run-generation-tests') || github.ref == 'refs/heads/master'
