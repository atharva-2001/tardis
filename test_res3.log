============================= test session starts ==============================
platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0 -- /home/aryaatharva18/miniforge3/envs/tardis_numpy/bin/python3.12
cachedir: .pytest_cache
metadata: {'Python': '3.12.4', 'Platform': 'Linux-5.15.0-67-generic-x86_64-with-glibc2.31', 'Packages': {'pytest': '8.2.2', 'pluggy': '1.5.0'}, 'Plugins': {'doctestplus': '1.2.1', 'anyio': '4.4.0', 'cov': '5.0.0', 'metadata': '3.1.1', 'html': '4.1.1'}}
rootdir: /home/aryaatharva18/tardis-main/tardis
configfile: pyproject.toml
plugins: doctestplus-1.2.1, anyio-4.4.0, cov-5.0.0, metadata-3.1.1, html-4.1.1
collecting ... collected 860 items

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_rad] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-g_electron] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-selected_atoms] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-number_density] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-t_electrons] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-w] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-t_rad] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_electron] PASSED [  0%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-level_boltzmann_factor] PASSED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-partition_function] PASSED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-excitation_energy] PASSED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] FAILED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] FAILED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] FAILED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-atomic_mass] PASSED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-ionization_data] PASSED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] FAILED [  1%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] FAILED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] FAILED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-metastability] PASSED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-delta] PASSED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-previous_electron_densities] SKIPPED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-phi] PASSED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-ion_number_density] PASSED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-electron_densities] PASSED [  2%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-level_number_density] PASSED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-stimulated_emission_factor] PASSED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-previous_beta_sobolev] SKIPPED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] FAILED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] FAILED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-transition_probabilities] PASSED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] FAILED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues_norm_factor] SKIPPED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blue_estimator] SKIPPED [  3%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-volume] SKIPPED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-r_inner] SKIPPED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-helium_population] SKIPPED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-helium_population_updated] SKIPPED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[ionization:nebular] PASSED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[ionization:nebular-time_explosion] PASSED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[ionization:nebular-link_t_rad_t_electron] PASSED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[ionization:nebular] PASSED [  4%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[ionization:nebular] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_rad] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-g_electron] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-selected_atoms] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-number_density] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-t_electrons] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-w] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-t_rad] PASSED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_electron] SKIPPED [  5%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-level_boltzmann_factor] PASSED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-partition_function] PASSED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-excitation_energy] PASSED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] FAILED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] FAILED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] FAILED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-atomic_mass] PASSED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-ionization_data] PASSED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] FAILED [  6%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] FAILED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] FAILED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-metastability] PASSED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-delta] SKIPPED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-previous_electron_densities] SKIPPED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-phi] PASSED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-ion_number_density] PASSED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-electron_densities] PASSED [  7%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-level_number_density] PASSED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-stimulated_emission_factor] PASSED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-previous_beta_sobolev] SKIPPED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] FAILED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] FAILED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-transition_probabilities] PASSED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] FAILED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues_norm_factor] SKIPPED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blue_estimator] SKIPPED [  8%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-volume] SKIPPED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-r_inner] SKIPPED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-helium_population] SKIPPED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-helium_population_updated] SKIPPED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[ionization:lte] PASSED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[ionization:lte-time_explosion] PASSED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[ionization:lte-link_t_rad_t_electron] PASSED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[ionization:lte] PASSED [  9%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[ionization:lte] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_rad] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-g_electron] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-selected_atoms] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-number_density] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-t_electrons] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-w] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-t_rad] PASSED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_electron] SKIPPED [ 10%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-level_boltzmann_factor] PASSED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-partition_function] PASSED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-excitation_energy] PASSED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] FAILED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] FAILED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] FAILED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-atomic_mass] PASSED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-ionization_data] PASSED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] FAILED [ 11%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] FAILED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] FAILED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-metastability] PASSED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-delta] SKIPPED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-previous_electron_densities] SKIPPED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-phi] PASSED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-ion_number_density] PASSED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-electron_densities] PASSED [ 12%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-level_number_density] PASSED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-stimulated_emission_factor] PASSED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-previous_beta_sobolev] SKIPPED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] FAILED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] FAILED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-transition_probabilities] PASSED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] FAILED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues_norm_factor] SKIPPED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blue_estimator] SKIPPED [ 13%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-volume] SKIPPED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-r_inner] SKIPPED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-helium_population] SKIPPED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-helium_population_updated] SKIPPED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[excitation:lte] PASSED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[excitation:lte-time_explosion] PASSED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[excitation:lte-link_t_rad_t_electron] PASSED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[excitation:lte] PASSED [ 14%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[excitation:lte] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_rad] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-g_electron] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-selected_atoms] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-number_density] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-t_electrons] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-w] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-t_rad] PASSED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_electron] SKIPPED [ 15%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-level_boltzmann_factor] PASSED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-partition_function] PASSED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-excitation_energy] PASSED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] FAILED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] FAILED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] FAILED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-atomic_mass] PASSED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-ionization_data] PASSED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] FAILED [ 16%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] FAILED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] FAILED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-metastability] PASSED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-delta] SKIPPED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-previous_electron_densities] SKIPPED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-phi] PASSED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-ion_number_density] PASSED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-electron_densities] PASSED [ 17%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-level_number_density] PASSED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-stimulated_emission_factor] PASSED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-previous_beta_sobolev] SKIPPED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] FAILED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] FAILED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-transition_probabilities] PASSED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] FAILED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues_norm_factor] SKIPPED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blue_estimator] SKIPPED [ 18%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-volume] SKIPPED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-r_inner] SKIPPED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-helium_population] SKIPPED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-helium_population_updated] SKIPPED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[excitation:dilute-lte] PASSED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[excitation:dilute-lte-time_explosion] PASSED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[excitation:dilute-lte-link_t_rad_t_electron] PASSED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[excitation:dilute-lte] PASSED [ 19%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[excitation:dilute-lte] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_rad] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-g_electron] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-selected_atoms] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-number_density] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-t_electrons] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-w] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-t_rad] PASSED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_electron] SKIPPED [ 20%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-level_boltzmann_factor] PASSED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-partition_function] PASSED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-excitation_energy] PASSED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] FAILED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] FAILED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] FAILED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-atomic_mass] PASSED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-ionization_data] PASSED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] FAILED [ 21%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] FAILED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] FAILED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-metastability] PASSED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-delta] SKIPPED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-previous_electron_densities] SKIPPED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-phi] PASSED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-ion_number_density] PASSED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-electron_densities] PASSED [ 22%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-level_number_density] PASSED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-stimulated_emission_factor] PASSED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-previous_beta_sobolev] SKIPPED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] FAILED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] FAILED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-transition_probabilities] PASSED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] FAILED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor] PASSED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator] PASSED [ 23%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume] PASSED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner] PASSED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-helium_population] SKIPPED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-helium_population_updated] SKIPPED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[radiative_rates_type:detailed-w_epsilon:1e-10] PASSED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:detailed-w_epsilon:1e-10-time_explosion] PASSED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:detailed-w_epsilon:1e-10-link_t_rad_t_electron] PASSED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[radiative_rates_type:detailed-w_epsilon:1e-10] PASSED [ 24%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[radiative_rates_type:detailed-w_epsilon:1e-10] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_rad] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-g_electron] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-selected_atoms] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-number_density] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-t_electrons] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-t_rad] PASSED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_electron] SKIPPED [ 25%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-level_boltzmann_factor] PASSED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-partition_function] PASSED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-excitation_energy] PASSED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] FAILED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] FAILED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] FAILED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-atomic_mass] PASSED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-ionization_data] PASSED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] FAILED [ 26%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] FAILED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] FAILED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-metastability] PASSED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-delta] SKIPPED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-previous_electron_densities] SKIPPED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-phi] PASSED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-ion_number_density] PASSED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-electron_densities] PASSED [ 27%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-level_number_density] PASSED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-stimulated_emission_factor] PASSED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-previous_beta_sobolev] SKIPPED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] FAILED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] FAILED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-transition_probabilities] PASSED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] FAILED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor] PASSED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator] PASSED [ 28%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume] PASSED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner] PASSED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-helium_population] SKIPPED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-helium_population_updated] SKIPPED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[radiative_rates_type:detailed] PASSED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:detailed-time_explosion] PASSED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:detailed-link_t_rad_t_electron] PASSED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[radiative_rates_type:detailed] PASSED [ 29%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[radiative_rates_type:detailed] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_rad] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-g_electron] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-selected_atoms] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-number_density] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-t_electrons] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-w] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-t_rad] PASSED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_electron] SKIPPED [ 30%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-level_boltzmann_factor] PASSED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-partition_function] PASSED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-excitation_energy] PASSED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] FAILED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] FAILED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] FAILED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-atomic_mass] PASSED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-ionization_data] PASSED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] FAILED [ 31%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] FAILED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] FAILED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-metastability] PASSED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-delta] SKIPPED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-previous_electron_densities] SKIPPED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-phi] PASSED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-ion_number_density] PASSED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-electron_densities] PASSED [ 32%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-level_number_density] PASSED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-stimulated_emission_factor] PASSED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-previous_beta_sobolev] SKIPPED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] FAILED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] FAILED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-transition_probabilities] PASSED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] FAILED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues_norm_factor] SKIPPED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blue_estimator] SKIPPED [ 33%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-volume] SKIPPED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-r_inner] SKIPPED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-helium_population] SKIPPED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-helium_population_updated] SKIPPED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[radiative_rates_type:blackbody] PASSED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:blackbody-time_explosion] PASSED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:blackbody-link_t_rad_t_electron] PASSED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[radiative_rates_type:blackbody] PASSED [ 34%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[radiative_rates_type:blackbody] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_rad] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-g_electron] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-selected_atoms] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-number_density] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-t_electrons] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-w] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-t_rad] PASSED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_electron] SKIPPED [ 35%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-level_boltzmann_factor] PASSED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-partition_function] PASSED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-excitation_energy] PASSED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] FAILED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] FAILED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] FAILED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-atomic_mass] PASSED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-ionization_data] PASSED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] FAILED [ 36%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] FAILED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] FAILED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-metastability] PASSED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-delta] SKIPPED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-previous_electron_densities] SKIPPED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-phi] PASSED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-ion_number_density] PASSED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-electron_densities] PASSED [ 37%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-level_number_density] PASSED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-stimulated_emission_factor] PASSED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-previous_beta_sobolev] SKIPPED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] FAILED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] FAILED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-transition_probabilities] PASSED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] FAILED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues_norm_factor] SKIPPED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blue_estimator] SKIPPED [ 38%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-volume] SKIPPED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-r_inner] SKIPPED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-helium_population] SKIPPED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-helium_population_updated] SKIPPED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[radiative_rates_type:dilute-blackbody] PASSED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:dilute-blackbody-time_explosion] PASSED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[radiative_rates_type:dilute-blackbody-link_t_rad_t_electron] PASSED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[radiative_rates_type:dilute-blackbody] PASSED [ 39%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[radiative_rates_type:dilute-blackbody] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-beta_rad] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-g_electron] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-selected_atoms] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-number_density] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-t_electrons] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-w] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-t_rad] PASSED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-beta_electron] SKIPPED [ 40%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-level_boltzmann_factor] PASSED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-partition_function] PASSED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-excitation_energy] PASSED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] FAILED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] FAILED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] FAILED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-atomic_mass] PASSED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-ionization_data] PASSED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] FAILED [ 41%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] FAILED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] FAILED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-metastability] PASSED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-delta] SKIPPED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-previous_electron_densities] SKIPPED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-phi] PASSED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-ion_number_density] PASSED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-electron_densities] PASSED [ 42%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-level_number_density] PASSED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-stimulated_emission_factor] PASSED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-previous_beta_sobolev] SKIPPED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] FAILED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-beta_sobolev] SKIPPED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-transition_probabilities] SKIPPED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] FAILED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues_norm_factor] SKIPPED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blue_estimator] SKIPPED [ 43%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-volume] SKIPPED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-r_inner] SKIPPED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-helium_population] SKIPPED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-helium_population_updated] SKIPPED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[line_interaction_type:scatter] PASSED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[line_interaction_type:scatter-time_explosion] PASSED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[line_interaction_type:scatter-link_t_rad_t_electron] PASSED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[line_interaction_type:scatter] PASSED [ 44%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[line_interaction_type:scatter] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_rad] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-g_electron] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-selected_atoms] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-number_density] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-t_electrons] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-w] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-t_rad] PASSED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_electron] SKIPPED [ 45%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-level_boltzmann_factor] PASSED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-partition_function] PASSED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-excitation_energy] PASSED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] FAILED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] FAILED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] FAILED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-atomic_mass] PASSED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-ionization_data] PASSED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] FAILED [ 46%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] FAILED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] FAILED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-metastability] PASSED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-delta] SKIPPED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-previous_electron_densities] SKIPPED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-phi] PASSED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-ion_number_density] PASSED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-electron_densities] PASSED [ 47%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-level_number_density] PASSED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-stimulated_emission_factor] PASSED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-previous_beta_sobolev] SKIPPED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] FAILED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] FAILED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-transition_probabilities] PASSED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] FAILED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues_norm_factor] SKIPPED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blue_estimator] SKIPPED [ 48%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-volume] SKIPPED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-r_inner] SKIPPED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-helium_population] SKIPPED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-helium_population_updated] SKIPPED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[line_interaction_type:macroatom] PASSED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[line_interaction_type:macroatom-time_explosion] PASSED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[line_interaction_type:macroatom-link_t_rad_t_electron] PASSED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[line_interaction_type:macroatom] PASSED [ 49%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[line_interaction_type:macroatom] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_rad] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-g_electron] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-selected_atoms] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-number_density] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-t_electrons] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-w] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-t_rad] PASSED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_electron] SKIPPED [ 50%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-level_boltzmann_factor] PASSED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-partition_function] PASSED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-excitation_energy] PASSED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] FAILED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] FAILED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] FAILED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-atomic_mass] PASSED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-ionization_data] PASSED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] FAILED [ 51%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] FAILED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] FAILED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-metastability] PASSED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-delta] SKIPPED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-previous_electron_densities] SKIPPED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-phi] PASSED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-ion_number_density] PASSED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-electron_densities] PASSED [ 52%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-level_number_density] PASSED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-stimulated_emission_factor] PASSED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-previous_beta_sobolev] SKIPPED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] FAILED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] FAILED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-transition_probabilities] PASSED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] FAILED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues_norm_factor] SKIPPED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blue_estimator] SKIPPED [ 53%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-volume] SKIPPED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-r_inner] SKIPPED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-helium_population] SKIPPED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-helium_population_updated] SKIPPED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[line_interaction_type:downbranch] PASSED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[line_interaction_type:downbranch-time_explosion] PASSED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[line_interaction_type:downbranch-link_t_rad_t_electron] PASSED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[line_interaction_type:downbranch] PASSED [ 54%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[line_interaction_type:downbranch] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_rad] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-g_electron] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-selected_atoms] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-number_density] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-t_electrons] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-w] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-t_rad] PASSED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_electron] SKIPPED [ 55%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-level_boltzmann_factor] PASSED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-partition_function] PASSED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-excitation_energy] PASSED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] FAILED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] FAILED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] FAILED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-atomic_mass] PASSED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-ionization_data] PASSED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] FAILED [ 56%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] FAILED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] FAILED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-metastability] PASSED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-delta] SKIPPED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-previous_electron_densities] SKIPPED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-phi] PASSED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-ion_number_density] PASSED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-electron_densities] PASSED [ 57%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-level_number_density] PASSED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-stimulated_emission_factor] PASSED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-previous_beta_sobolev] SKIPPED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] FAILED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] FAILED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-transition_probabilities] PASSED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] FAILED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues_norm_factor] SKIPPED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blue_estimator] SKIPPED [ 58%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-volume] SKIPPED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-r_inner] SKIPPED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-helium_population] SKIPPED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-helium_population_updated] SKIPPED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[disable_electron_scattering:True] PASSED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[disable_electron_scattering:True-time_explosion] PASSED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[disable_electron_scattering:True-link_t_rad_t_electron] PASSED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[disable_electron_scattering:True] PASSED [ 59%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[disable_electron_scattering:True] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_rad] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-g_electron] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-selected_atoms] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-number_density] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-t_electrons] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-w] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-t_rad] PASSED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_electron] SKIPPED [ 60%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-level_boltzmann_factor] PASSED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-partition_function] PASSED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-excitation_energy] PASSED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] FAILED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] FAILED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] FAILED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-atomic_mass] PASSED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-ionization_data] PASSED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] FAILED [ 61%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] FAILED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] FAILED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-metastability] PASSED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-delta] SKIPPED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-previous_electron_densities] SKIPPED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-phi] PASSED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-ion_number_density] PASSED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-electron_densities] PASSED [ 62%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-level_number_density] PASSED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-stimulated_emission_factor] PASSED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-previous_beta_sobolev] SKIPPED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] FAILED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] FAILED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-transition_probabilities] PASSED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] FAILED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues_norm_factor] SKIPPED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blue_estimator] SKIPPED [ 63%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-volume] SKIPPED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-r_inner] SKIPPED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-helium_population] SKIPPED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-helium_population_updated] SKIPPED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[disable_electron_scattering:False] PASSED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[disable_electron_scattering:False-time_explosion] PASSED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[disable_electron_scattering:False-link_t_rad_t_electron] PASSED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[disable_electron_scattering:False] PASSED [ 64%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[disable_electron_scattering:False] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_rad] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-g_electron] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-selected_atoms] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-number_density] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-t_electrons] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-w] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-t_rad] PASSED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_electron] SKIPPED [ 65%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-level_boltzmann_factor] PASSED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-partition_function] PASSED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-excitation_energy] PASSED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] FAILED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] FAILED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] FAILED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-atomic_mass] PASSED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-ionization_data] PASSED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] FAILED [ 66%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] FAILED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] FAILED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-metastability] PASSED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-delta] SKIPPED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_electron_densities] PASSED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-phi] PASSED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-ion_number_density] PASSED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-electron_densities] PASSED [ 67%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-level_number_density] PASSED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] FAILED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] FAILED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] FAILED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] FAILED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-transition_probabilities] PASSED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] FAILED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues_norm_factor] SKIPPED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blue_estimator] SKIPPED [ 68%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-volume] SKIPPED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-r_inner] SKIPPED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-helium_population] SKIPPED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-helium_population_updated] SKIPPED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[nlte:{'species': ['He I'], 'coronal_approximation': True}] PASSED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-time_explosion] PASSED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-link_t_rad_t_electron] PASSED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[nlte:{'species': ['He I'], 'coronal_approximation': True}] PASSED [ 69%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[nlte:{'species': ['He I'], 'coronal_approximation': True}] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_rad] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-g_electron] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-selected_atoms] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-number_density] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-t_electrons] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-w] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-t_rad] PASSED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_electron] SKIPPED [ 70%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-level_boltzmann_factor] PASSED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-partition_function] PASSED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-excitation_energy] PASSED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] FAILED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] FAILED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] FAILED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-atomic_mass] PASSED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-ionization_data] PASSED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] FAILED [ 71%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] FAILED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] FAILED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-metastability] PASSED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-delta] SKIPPED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_electron_densities] PASSED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-phi] PASSED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-ion_number_density] PASSED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-electron_densities] PASSED [ 72%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-level_number_density] PASSED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] FAILED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] FAILED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] FAILED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] FAILED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-transition_probabilities] PASSED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] FAILED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues_norm_factor] SKIPPED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blue_estimator] SKIPPED [ 73%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-volume] SKIPPED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-r_inner] SKIPPED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-helium_population] SKIPPED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-helium_population_updated] SKIPPED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[nlte:{'species': ['He I'], 'classical_nebular': True}] PASSED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-time_explosion] PASSED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-link_t_rad_t_electron] PASSED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[nlte:{'species': ['He I'], 'classical_nebular': True}] PASSED [ 74%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[nlte:{'species': ['He I'], 'classical_nebular': True}] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_rad] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-g_electron] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-selected_atoms] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-number_density] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-t_electrons] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-w] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-t_rad] PASSED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_electron] SKIPPED [ 75%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-level_boltzmann_factor] PASSED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-partition_function] PASSED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-excitation_energy] PASSED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] FAILED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] FAILED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] FAILED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-atomic_mass] PASSED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-ionization_data] PASSED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] FAILED [ 76%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] FAILED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] FAILED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-metastability] PASSED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-delta] SKIPPED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_electron_densities] PASSED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-phi] PASSED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-ion_number_density] PASSED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-electron_densities] PASSED [ 77%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-level_number_density] PASSED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] FAILED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] FAILED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] FAILED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] FAILED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-transition_probabilities] PASSED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] FAILED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues_norm_factor] SKIPPED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blue_estimator] SKIPPED [ 78%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-volume] SKIPPED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-r_inner] SKIPPED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-helium_population] SKIPPED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-helium_population_updated] SKIPPED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[nlte:{'species': ['He I']}] PASSED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[nlte:{'species': ['He I']}-time_explosion] PASSED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[nlte:{'species': ['He I']}-link_t_rad_t_electron] PASSED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[nlte:{'species': ['He I']}] PASSED [ 79%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[nlte:{'species': ['He I']}] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_rad] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-g_electron] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-selected_atoms] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-number_density] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-t_electrons] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-w] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-t_rad] PASSED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_electron] SKIPPED [ 80%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-level_boltzmann_factor] PASSED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-partition_function] PASSED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-excitation_energy] PASSED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] FAILED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] FAILED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] FAILED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-atomic_mass] PASSED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-ionization_data] PASSED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] FAILED [ 81%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] FAILED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] FAILED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-metastability] PASSED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-delta] SKIPPED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-previous_electron_densities] SKIPPED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-phi] PASSED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-ion_number_density] PASSED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-electron_densities] PASSED [ 82%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-level_number_density] PASSED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-stimulated_emission_factor] PASSED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-previous_beta_sobolev] SKIPPED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] FAILED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] FAILED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-transition_probabilities] PASSED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] FAILED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues_norm_factor] SKIPPED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blue_estimator] SKIPPED [ 83%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-volume] SKIPPED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-r_inner] SKIPPED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-helium_population] SKIPPED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-helium_population_updated] SKIPPED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[initial_t_inner:10000 K] PASSED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[initial_t_inner:10000 K-time_explosion] PASSED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[initial_t_inner:10000 K-link_t_rad_t_electron] PASSED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[initial_t_inner:10000 K] PASSED [ 84%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[initial_t_inner:10000 K] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_rad] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-g_electron] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-selected_atoms] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-number_density] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-t_electrons] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-w] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-t_rad] PASSED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_electron] SKIPPED [ 85%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-level_boltzmann_factor] PASSED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-partition_function] PASSED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-excitation_energy] PASSED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] FAILED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] FAILED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] FAILED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-atomic_mass] PASSED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-ionization_data] PASSED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] FAILED [ 86%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] FAILED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] FAILED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-metastability] PASSED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-delta] SKIPPED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-previous_electron_densities] SKIPPED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-phi] PASSED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-ion_number_density] PASSED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-electron_densities] PASSED [ 87%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-level_number_density] PASSED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-stimulated_emission_factor] PASSED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-previous_beta_sobolev] SKIPPED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] FAILED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] FAILED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-transition_probabilities] PASSED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] FAILED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues_norm_factor] SKIPPED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blue_estimator] SKIPPED [ 88%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-volume] SKIPPED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-r_inner] SKIPPED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-helium_population] SKIPPED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-helium_population_updated] SKIPPED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[initial_t_rad:10000 K] PASSED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[initial_t_rad:10000 K-time_explosion] PASSED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[initial_t_rad:10000 K-link_t_rad_t_electron] PASSED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[initial_t_rad:10000 K] PASSED [ 89%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[initial_t_rad:10000 K] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_rad] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-g_electron] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-selected_atoms] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-number_density] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-t_electrons] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-w] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-t_rad] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_electron] PASSED [ 90%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-level_boltzmann_factor] PASSED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-partition_function] PASSED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-excitation_energy] PASSED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] FAILED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] FAILED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] FAILED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-atomic_mass] PASSED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-ionization_data] PASSED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] FAILED [ 91%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] FAILED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] FAILED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-metastability] PASSED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta] PASSED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-previous_electron_densities] SKIPPED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-phi] PASSED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-ion_number_density] PASSED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-electron_densities] PASSED [ 92%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-level_number_density] PASSED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-stimulated_emission_factor] PASSED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-previous_beta_sobolev] SKIPPED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] FAILED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] FAILED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-transition_probabilities] PASSED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] FAILED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues_norm_factor] SKIPPED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blue_estimator] SKIPPED [ 93%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-volume] SKIPPED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-r_inner] SKIPPED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-helium_population] PASSED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-helium_population_updated] PASSED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[helium_treatment:recomb-nlte] PASSED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[helium_treatment:recomb-nlte-time_explosion] PASSED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[helium_treatment:recomb-nlte-link_t_rad_t_electron] PASSED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[helium_treatment:recomb-nlte] PASSED [ 94%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[helium_treatment:recomb-nlte] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_rad] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-g_electron] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-selected_atoms] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-number_density] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-t_electrons] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-w] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-t_rad] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_electron] PASSED [ 95%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-level_boltzmann_factor] PASSED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-partition_function] PASSED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-excitation_energy] PASSED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] FAILED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] FAILED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] FAILED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-atomic_mass] PASSED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-ionization_data] PASSED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] FAILED [ 96%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] FAILED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] FAILED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-metastability] PASSED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-delta] PASSED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-previous_electron_densities] SKIPPED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-phi] PASSED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-ion_number_density] PASSED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-electron_densities] PASSED [ 97%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-level_number_density] PASSED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-stimulated_emission_factor] PASSED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-previous_beta_sobolev] SKIPPED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] FAILED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] FAILED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-transition_probabilities] PASSED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] FAILED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues_norm_factor] SKIPPED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blue_estimator] SKIPPED [ 98%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-volume] SKIPPED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-r_inner] SKIPPED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-helium_population] PASSED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-helium_population_updated] PASSED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_levels[helium_treatment:recomb-nlte-delta_treatment:0.5] PASSED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-time_explosion] PASSED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_scalars_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-link_t_rad_t_electron] PASSED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_helium_treatment[helium_treatment:recomb-nlte-delta_treatment:0.5] PASSED [ 99%]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_zeta_data[helium_treatment:recomb-nlte-delta_treatment:0.5] PASSED [100%]

=================================== FAILURES ===================================
_________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4be810>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4be8a0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4be930>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4beae0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4beb70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4bec00>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4bf2f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4bf3b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4bf530>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928699bce0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f82f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f83b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
__ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f8470>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f86b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f8770>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f8830>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f8fb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f9070>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f91f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92645e57c0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4f9f70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fa030>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
__ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fa0f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fa330>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fa3f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fa4b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fac30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4facf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fae70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285df8290>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fbbf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fbcb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fbd70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4fbfb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5240b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c524170>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5248f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5249b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c524b30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928414f440>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5258b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c525970>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c525a30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c525c70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c525d30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c525df0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c526570>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c526630>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5267b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264268bf0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c527530>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5275f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5276b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5278f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5279b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c527a70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c548230>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5482f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c548470>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92646b8d40>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5491f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5492b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c549370>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5495b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c549670>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c549730>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c549eb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c549f70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54a0f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285d792e0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54ae70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54af30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54aff0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54b230>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54b2f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54b3b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54bb30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54bbf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c54bd70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92841f9f10>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c574b30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c574bf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c574cb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c574ef0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c574fb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c575070>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5757f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c575a30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205532990>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5767b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c576870>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c576930>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c576b70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c576c30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c576cf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c577470>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c577530>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c5776b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92054d6690>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59c470>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59c530>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59c5f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59c830>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59c8f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59c9b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59d130>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59d1f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59d370>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9285f67a10>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59e0f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59e1b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59e270>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59e4b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59e570>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59e630>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59edb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59ee70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59eff0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f92842f0ef0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59fd70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59fe30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c59fef0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c8170>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c8230>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c82f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c8a70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c8b30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c8cb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205427710>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c9a30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c9af0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c9bb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c9df0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c9eb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3c9f70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3ca570>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'stimulated_emission_factor'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
E   
E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
E   At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3ca630>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'previous_beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3ca6f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3ca7b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3ca930>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f920523b290>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3cb6b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3cb770>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3cb830>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3cba70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3cbb30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3cbbf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f0230>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'stimulated_emission_factor'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
E   
E   DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f02f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'previous_beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f03b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f0470>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f05f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264768f50>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f1370>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f1430>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f14f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f1730>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f17f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f18b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f1eb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'stimulated_emission_factor'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
E   
E   DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f1f70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'previous_beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f2030>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
__ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f20f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f2270>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9264428140>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f2ff0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f30b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f3170>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f33b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f3470>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f3530>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f3cb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f3d70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c3f3ef0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f9205707bc0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c424cb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c424d70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c424e30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c425070>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c425130>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4251f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c425970>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c425a30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c425bb0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429e2d0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c426930>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4269f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c426ab0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c426cf0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c426db0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c426e70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4275f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4276b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c427830>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f926429d9d0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4485f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'lines'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4486b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'lines_lower_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
       52, 52, 50, 51, 50, 51, 52, 52, 52, ...
       21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (2.42915 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c448770>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'lines_upper_level_index'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
       67, 66, 60, 61, 59, 58, 62, 60, 59, ...
       31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
       24, 16, 30, 28, 27, 26, 26, 28, 29])
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: Series are different
E           
E           Series values are different (6.47773 %)
E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4489b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>, attr = 'nu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c448a70>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'wavelength_cm'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c448b30>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>, attr = 'f_lu'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
>               pdt.assert_series_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4492b0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'tau_sobolevs'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c449370>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'beta_sobolev'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
_ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _

left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
        3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
       21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
err_msg = None

    def _raise(left, right, err_msg) -> NoReturn:
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape
                )
    
            diff = 0
            for left_arr, right_arr in zip(left, right):
                # count up differences
                if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right, index_values=index_values)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (2.42915 %)
E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError

During handling of the above exception, another exception occurred:

self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f929c4494f0>
plasma = <tardis.plasma.base.BasePlasma object at 0x7f928410e2a0>
attr = 'j_blues'

    @pytest.mark.parametrize("attr", combined_properties)
    def test_plasma_properties(self, plasma, attr):
        key = f"plasma/{attr}"
        try:
            expected = pd.read_hdf(self.regression_data.fpath, key)
        except KeyError:
            pytest.skip(f"Key {key} not found in regression data")
    
        if hasattr(plasma, attr):
            actual = getattr(plasma, attr)
            if attr == "selected_atoms":
                npt.assert_allclose(actual.values, expected.values)
            elif actual.ndim == 1:
                actual = pd.Series(actual)
                pdt.assert_series_equal(actual, expected)
            else:
                actual = pd.DataFrame(actual)
>               pdt.assert_frame_equal(actual, expected)

tardis/plasma/tests/test_complete_plasmas.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
testing.pyx:55: in pandas._libs.testing.assert_almost_equal
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   AssertionError: MultiIndex level [2] are different
E   
E   MultiIndex level [2] values are different (2.42915 %)
E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
E          ...
E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
E         dtype='int64', name='level_number_lower', length=247)
E   At positional index 75, first diff: 7 != 6

testing.pyx:173: AssertionError
=============================== warnings summary ===============================
tardis/io/configuration/config_validator.py:6
tardis/io/configuration/config_validator.py:6
  /home/aryaatharva18/tardis-main/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
  
  jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/jupyter_client/connect.py:22
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
  
  Jupyter is migrating its paths to use standard platformdirs
  given by the platformdirs library.  To remove this warning and
  see the appropriate new directories, set the environment variable
  `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
  The use of platformdirs will be the default in `jupyter_core` v6

tardis/plasma/properties/__init__.py:17
  /home/aryaatharva18/tardis-main/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
  
  The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2599
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2599: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int8.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2598
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2598: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int8.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2599
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2599: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int16.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2598
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2598: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int16.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/sorting.py:349
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/sorting.py:349: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int8.

../../miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/sorting.py:349
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/pandas/core/sorting.py:349: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int16.

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_rad]
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/numexpr/expressions.py:285: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int32.

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_rad]
  /home/aryaatharva18/miniforge3/envs/tardis_numpy/lib/python3.12/site-packages/numexpr/expressions.py:295: UserWarning:
  
  result dtype changed due to the removal of value-based promotion from NumPy. Changed from int64 to int32.

tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
  /home/aryaatharva18/tardis-main/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
  
  Property "atomic_mass" not found

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
  /home/aryaatharva18/tardis-main/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
  
  Property "j_blues_norm_factor" not found

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
  /home/aryaatharva18/tardis-main/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
  
  Property "j_blue_estimator" not found

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
  /home/aryaatharva18/tardis-main/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
  
  Property "volume" not found

tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
  /home/aryaatharva18/tardis-main/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
  
  Property "r_inner" not found

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different

DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
[right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different

DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
[right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different

DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
[right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different

Series values are different (2.42915 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
[right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different

Series values are different (6.47773 %)
[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
[left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
[right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different

MultiIndex level [2] values are different (2.42915 %)
[left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
[right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
       ...
       20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
      dtype='int64', name='level_number_lower', length=247)
At positional index 75, first diff: 7 != 6
========== 185 failed, 497 passed, 178 skipped, 40 warnings in 31.12s ==========
