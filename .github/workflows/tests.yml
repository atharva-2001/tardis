#  For more information about TARDIS pipelines, please refer to:
#
#    https://tardis-sn.github.io/tardis/development/continuous_integration.html

name: tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
  workflow_call:

env:
  CACHE_NUMBER: 0  # increase to reset cache manually
  PYTEST_FLAGS: --tardis-regression-data=${{ github.workspace }}/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

defaults:
  run:
    shell: bash -l {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-cache:
    uses: ./.github/workflows/lfs-cache.yml
    with:
      atom-data-sparse: false
      regression-data-repo: tardis-sn/tardis-regression-data
      allow_lfs_pull: ${{ github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'git-lfs-pull') }}

  tests:
    name: tests ${{ matrix.continuum }} continuum ${{ matrix.os }} ${{ matrix.install_method }}
    if: github.repository_owner == 'tardis-sn'
    needs: [test-cache]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        label: [osx-arm64, linux-64]
        continuum: ['not', '']
        install_method: [editable, git, normal]
        include:
          - label: osx-arm64
            os: macos-latest
            prefix: /Users/runner/miniconda3/envs/tardis

          - label: linux-64
            os: ubuntu-latest
            prefix: /usr/share/miniconda3/envs/tardis
    steps:
      - uses: actions/checkout@v4          

      - name: Setup LFS
        uses: tardis-sn/tardis-actions/setup-lfs@main

      - name: Setup environment
        uses: tardis-sn/tardis-actions/setup-env@main
        with:
          os-label: ${{ matrix.label }}
      
      - run: python -c "import tardis; print(tardis.__file__); print('\n', tardis.__version__)"
        continue-on-error: true

      - name: Install tardis editable
        if: ${{ matrix.install_method == 'editable' }}
        run: |
          pip install -e ".[tardisbase]"

      - name: Install tardis git
        if: ${{ matrix.install_method == 'git' }}
        run: |
          pip install "tardis[tardisbase] @ git+https://github.com/tardis-sn/tardis.git@${{ github.sha }}"

      - name: Install tardis normal
        if: ${{ matrix.install_method == 'normal' }}
        run: |
          pip install ".[tardisbase]"

      - name: Install qgridnext and lineid_plot
        run: |
          pip install --no-deps qgridnext lineid_plot
      
      - run: python -c "import tardis; print(tardis.__file__); print('\n', tardis.__version__)"
       
      - run: python -c "import tardis; print(tardis.__file__); print('\n', tardis.__version__)"
        working-directory: ${{ github.workspace }}/tardisbase }
      
      
          